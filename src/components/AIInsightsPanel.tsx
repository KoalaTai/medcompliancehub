import { useState, useEffect } from 'react'
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'
import { Button } from '@/components/ui/button'
import { Badge } from '@/components/ui/badge'
import { Progress } from '@/components/ui/progress'
import { 
  Brain,
  TrendUp,
  TrendDown,
  Lightbulb,
  Target,
  Zap,
  Activity,
  Clock,
  CheckCircle,
  Warning,
  BarChart
} from '@phosphor-icons/react'
import { useKV } from '@github/spark/hooks'

interface AIInsight {
  id: string
  type: 'performance' | 'optimization' | 'prediction' | 'recommendation'
  title: string
  description: string
  impact: 'high' | 'medium' | 'low'
  confidence: number // 0-100%
  actionable: boolean
  data: {
    currentValue?: number
    projectedValue?: number
    improvement?: number
    timeframe?: string
    affectedTemplates?: string[]
  }
  createdAt: string
}

interface PerformancePrediction {
  metric: string
  currentValue: number
  predictedValue: number
  trend: 'improving' | 'stable' | 'declining'
  confidence: number
  factors: string[]
}

// Mock AI insights - in production, these would be generated by AI analysis
const mockInsights: AIInsight[] = [
  {
    id: 'insight-1',
    type: 'optimization',
    title: 'Template Parallelization Opportunity',
    description: 'ISO 13485 Design Control template can reduce completion time by 28% through task parallelization',
    impact: 'high',
    confidence: 87,
    actionable: true,
    data: {
      currentValue: 42,
      projectedValue: 30,
      improvement: 28,
      timeframe: '2-3 weeks',
      affectedTemplates: ['iso13485-design-control']
    },
    createdAt: '2024-01-20T10:00:00Z'
  },
  {
    id: 'insight-2', 
    type: 'performance',
    title: 'EU MDR Template Performance Decline',
    description: 'EU MDR validation template showing 15% decline in effectiveness over last quarter',
    impact: 'high',
    confidence: 92,
    actionable: true,
    data: {
      currentValue: 86,
      projectedValue: 73,
      improvement: -15,
      timeframe: 'last 3 months',
      affectedTemplates: ['eu-mdr-validation']
    },
    createdAt: '2024-01-20T09:30:00Z'
  },
  {
    id: 'insight-3',
    type: 'recommendation',
    title: 'Automated Scheduling Implementation',
    description: 'Implementing automated scheduling across templates could save 12 days average completion time',
    impact: 'medium',
    confidence: 84,
    actionable: true,
    data: {
      currentValue: 45,
      projectedValue: 33,
      improvement: 27,
      timeframe: '1 month implementation',
      affectedTemplates: ['iso13485-design-control', 'fda-qsr-risk-management']
    },
    createdAt: '2024-01-20T08:45:00Z'
  },
  {
    id: 'insight-4',
    type: 'prediction',
    title: 'Resource Demand Forecast',
    description: 'AI predicts 35% increase in CAPA workflow demand for Q2 based on regulatory trends',
    impact: 'medium',
    confidence: 76,
    actionable: false,
    data: {
      currentValue: 23,
      projectedValue: 31,
      improvement: 35,
      timeframe: 'Q2 2024',
      affectedTemplates: []
    },
    createdAt: '2024-01-20T08:00:00Z'
  },
  {
    id: 'insight-5',
    type: 'optimization',
    title: 'Risk Management Template Enhancement',
    description: 'Adding structured workshop methodology could improve effectiveness by 18%',
    impact: 'high',
    confidence: 94,
    actionable: true,
    data: {
      currentValue: 94,
      projectedValue: 111,
      improvement: 18,
      timeframe: '2 weeks',
      affectedTemplates: ['fda-qsr-risk-management']
    },
    createdAt: '2024-01-19T16:20:00Z'
  }
]

const mockPredictions: PerformancePrediction[] = [
  {
    metric: 'Average Completion Time',
    currentValue: 52,
    predictedValue: 38,
    trend: 'improving',
    confidence: 89,
    factors: ['Template optimizations', 'Process automation', 'Resource allocation improvements']
  },
  {
    metric: 'Overall Effectiveness',
    currentValue: 87,
    predictedValue: 92,
    trend: 'improving', 
    confidence: 82,
    factors: ['AI-powered quality checks', 'Enhanced verification processes', 'Better stakeholder coordination']
  },
  {
    metric: 'On-Time Completion Rate',
    currentValue: 73,
    predictedValue: 85,
    trend: 'improving',
    confidence: 91,
    factors: ['Automated scheduling', 'Proactive bottleneck detection', 'Resource optimization']
  }
]

interface AIInsightsPanelProps {
  className?: string
}

export function AIInsightsPanel({ className }: AIInsightsPanelProps) {
  const [insights, setInsights] = useKV<AIInsight[]>('ai-insights', mockInsights)
  const [predictions] = useKV<PerformancePrediction[]>('performance-predictions', mockPredictions)
  const [isGenerating, setIsGenerating] = useState(false)

  const generateNewInsights = async () => {
    setIsGenerating(true)
    
    try {
      // Simulate AI analysis
      await new Promise(resolve => setTimeout(resolve, 2000))
      
      const prompt = spark.llmPrompt`Analyze current CAPA template performance data and generate actionable insights:
      
      Current Performance Metrics:
      - Average completion time: 52 days
      - Effectiveness score: 87%
      - On-time rate: 73%
      - Resource utilization: 78%
      
      Recent Trends:
      - EU MDR templates showing decline in performance
      - ISO 13485 templates stable but opportunity for optimization
      - FDA QSR templates improving with recent updates
      
      Generate insights covering:
      1. Performance optimization opportunities
      2. Predictive trends and forecasts
      3. Actionable recommendations for improvement
      4. Risk areas requiring attention
      
      Focus on high-impact, data-driven recommendations with confidence scores.`
      
      const aiResult = await spark.llm(prompt, 'gpt-4o')
      
      // Simulate new insight generation
      const newInsight: AIInsight = {
        id: `insight-${Date.now()}`,
        type: 'optimization',
        title: 'Cross-Framework Pattern Recognition',
        description: 'AI identified common success patterns across frameworks that can be applied broadly',
        impact: 'high',
        confidence: 88,
        actionable: true,
        data: {
          currentValue: 87,
          projectedValue: 95,
          improvement: 9,
          timeframe: '4-6 weeks',
          affectedTemplates: ['all-frameworks']
        },
        createdAt: new Date().toISOString()
      }
      
      setInsights(current => [newInsight, ...current.slice(0, 9)]) // Keep last 10
      
    } catch (error) {
      console.error('Failed to generate insights:', error)
    } finally {
      setIsGenerating(false)
    }
  }

  const getInsightIcon = (type: string) => {
    switch (type) {
      case 'optimization':
        return <Zap className="h-4 w-4 text-yellow-500" />
      case 'performance':
        return <BarChart className="h-4 w-4 text-blue-500" />
      case 'prediction':
        return <Activity className="h-4 w-4 text-purple-500" />
      case 'recommendation':
        return <Lightbulb className="h-4 w-4 text-green-500" />
      default:
        return <Brain className="h-4 w-4 text-primary" />
    }
  }

  const getImpactColor = (impact: string) => {
    switch (impact) {
      case 'high':
        return 'bg-red-100 text-red-800'
      case 'medium':
        return 'bg-yellow-100 text-yellow-800'
      case 'low':
        return 'bg-green-100 text-green-800'
      default:
        return 'bg-gray-100 text-gray-800'
    }
  }

  const getTrendIcon = (trend: string) => {
    switch (trend) {
      case 'improving':
        return <TrendUp className="h-4 w-4 text-green-500" />
      case 'declining':
        return <TrendDown className="h-4 w-4 text-red-500" />
      default:
        return <Activity className="h-4 w-4 text-blue-500" />
    }
  }

  return (
    <div className={`space-y-6 ${className}`}>
      {/* AI Insights Header */}
      <div className="flex items-center justify-between">
        <div>
          <h3 className="text-lg font-bold flex items-center gap-2">
            <Brain className="h-5 w-5 text-primary" />
            AI-Powered Insights
          </h3>
          <p className="text-sm text-muted-foreground">
            Intelligent recommendations based on performance analytics
          </p>
        </div>
        <Button 
          size="sm" 
          variant="outline" 
          onClick={generateNewInsights}
          disabled={isGenerating}
        >
          {isGenerating ? (
            <>
              <Brain className="h-4 w-4 mr-2 animate-pulse" />
              Analyzing...
            </>
          ) : (
            <>
              <Brain className="h-4 w-4 mr-2" />
              Refresh Insights
            </>
          )}
        </Button>
      </div>

      {/* Performance Predictions */}
      <Card>
        <CardHeader>
          <CardTitle className="text-base flex items-center gap-2">
            <Activity className="h-4 w-4 text-primary" />
            Performance Predictions
          </CardTitle>
          <CardDescription>AI-powered forecasts for the next quarter</CardDescription>
        </CardHeader>
        <CardContent>
          <div className="space-y-4">
            {predictions.map((prediction, index) => (
              <div key={index} className="space-y-2">
                <div className="flex items-center justify-between">
                  <div className="flex items-center gap-2">
                    {getTrendIcon(prediction.trend)}
                    <span className="font-medium text-sm">{prediction.metric}</span>
                  </div>
                  <div className="flex items-center gap-2">
                    <span className="text-sm text-muted-foreground">
                      {prediction.currentValue} â†’ {prediction.predictedValue}
                    </span>
                    <Badge variant="outline" className="text-xs">
                      {prediction.confidence}% confidence
                    </Badge>
                  </div>
                </div>
                <Progress 
                  value={prediction.confidence} 
                  className="h-2"
                />
                <div className="text-xs text-muted-foreground">
                  Key factors: {prediction.factors.slice(0, 2).join(', ')}
                </div>
              </div>
            ))}
          </div>
        </CardContent>
      </Card>

      {/* Recent Insights */}
      <div className="space-y-3">
        <h4 className="font-medium">Recent Insights</h4>
        <div className="space-y-3">
          {insights.slice(0, 5).map((insight) => (
            <Card key={insight.id} className="hover:shadow-sm transition-shadow">
              <CardContent className="p-4">
                <div className="flex items-start gap-3">
                  <div className="flex-shrink-0 mt-0.5">
                    {getInsightIcon(insight.type)}
                  </div>
                  <div className="flex-1 space-y-2">
                    <div className="flex items-start justify-between gap-2">
                      <h5 className="font-medium text-sm leading-tight">{insight.title}</h5>
                      <div className="flex items-center gap-1 flex-shrink-0">
                        <Badge className={getImpactColor(insight.impact)}>
                          {insight.impact}
                        </Badge>
                      </div>
                    </div>
                    
                    <p className="text-sm text-muted-foreground leading-relaxed">
                      {insight.description}
                    </p>
                    
                    <div className="flex items-center justify-between text-xs">
                      <div className="flex items-center gap-3">
                        {insight.data.improvement && (
                          <span className={`flex items-center gap-1 ${
                            insight.data.improvement > 0 ? 'text-green-600' : 'text-red-600'
                          }`}>
                            {insight.data.improvement > 0 ? '+' : ''}{insight.data.improvement}%
                            {insight.data.improvement > 0 ? 
                              <TrendUp className="h-3 w-3" /> : 
                              <TrendDown className="h-3 w-3" />
                            }
                          </span>
                        )}
                        <span className="text-muted-foreground">
                          {insight.confidence}% confidence
                        </span>
                        {insight.data.timeframe && (
                          <span className="text-muted-foreground">
                            {insight.data.timeframe}
                          </span>
                        )}
                      </div>
                      {insight.actionable && (
                        <Button size="sm" variant="outline" className="h-6 text-xs">
                          <Target className="h-3 w-3 mr-1" />
                          Apply
                        </Button>
                      )}
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
          ))}
        </div>
      </div>

      {/* Quick Actions */}
      <Card className="bg-primary/5 border-primary/20">
        <CardContent className="p-4">
          <div className="flex items-center justify-between">
            <div className="space-y-1">
              <h4 className="font-medium text-primary flex items-center gap-2">
                <Lightbulb className="h-4 w-4" />
                Recommended Actions
              </h4>
              <p className="text-sm text-muted-foreground">
                {insights.filter(i => i.actionable && i.impact === 'high').length} high-impact optimizations available
              </p>
            </div>
            <Button size="sm" className="gap-2">
              <Zap className="h-3 w-3" />
              View All
            </Button>
          </div>
        </CardContent>
      </Card>
    </div>
  )
}